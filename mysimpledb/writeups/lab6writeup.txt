Report for Lab 6
----------------

Exercise 1.

1. Briefly explain how logging is done in SimpleDB by describing when log records are written to the log.  Use Eclipse search tools to find all uses of the LogFile methods in the SimpleDB source code.

    Logging is done, whenever a FlushPage.BufferPool is called, when a transaction is starting or completing or when log wishes to write a checkpoint. A LogXactionBegin is called whenever a new transaction
    is starting up to keep in the log when transactions were started. LogWrite is called during a FlushPage, this is done so that any time a page is being written back to disk, a log record is kept of when 
    the that page was updated and by which transaction and what values were in it before hand in the case of an abort. The LogCommit or LogAbort method is called when a transaction completes and is forced to
    disk before the pages all of the pages that transaction are written to disk.


2. Where is LogFile.force called?  You should include usages inside other LogFile methods.  For each usage, why is it important that force is called?

    LogFile.force is called in BufferPool.flushpage because before you can actually flush the page you need to force the log. This is to maintain consistency with write-ahead
    logging. It is also called in the logCheckpoint, logAbort, and logCommit methods in LogFile.java. 
    In the case of a commit, it will ensure that the system knows this transaction committed, and all of its work  is sent to disk. If the system crashes the log will be able to redo the work of
    the committed transaction.
	In the case of an abort, it will ensure that the system knows this transaction aborted, and all of its work will be undone and is sent to disk. If the system crashes the log will be able to 
	undo any of the work done by the aborted transaction.    
    LogCheckpoint uses force so that way, everything up to this point has been written out to disk no matter which transactions are live. It ensures that the disk will be update according to
    the most recent checkpoint.


3. Where is setBeforeImage image called?  

    SetBeforeImage is called in the TransactionComplete method of the BufferPool class when a commit is called, in the HeapPage class constructor,
    and in Page.java.


Exercise 4.

In answering the next few questions, oncy include method calls in the source code; method calls in the test code can be ignored.

4. Where is BufferPool.flushPage called?  
    
    <Replace this text with your answer>

5. Where is BufferPool.flushPages(tid) called?

    <Replace this text with your answer>

6. Where is BufferPool.flushAllPages called?

    <Replace this text with your answer>

7. To support a NO FORCE, STEAL policy, describe exactly when/where pages should be flushed to disk.

    <Replace this text with your answer>


After you complete the lab, please answer the following questions.  

8. What is your name?  If you work with a partner, be sure to write both of your names.

    Markos Georges and Daniel Drucker

9. What did you think of this assignment?

    This assignment was fairly straightforward once exercise 4 was deemed optional.

10. What was the hardest part of this assignment?

    The hardest part was just conceptualizing where the readOnlyLog pointer was and how to move it around in the log,
    but once we figured that out the both the rollback and recover method were simple to implement.

11. Describe any missing or incomplete elements of your code.

    None for lab 6

12. Roughly how long did you spend working on this lab?

    We spent about 7 hours total working on this lab and an additional 5 hours debugging the rest of lab 5, although
    we still can't see to get the last three TransactionTest.systemtest's to work. 

